#!/usr/bin/env bash
## Copyright (c) 2017 Stephen Ribich
##
## Permission is hereby granted, free of charge, to any person obtaining a copy
## of this software and associated documentation files (the "Software"), to deal
## in the Software without restriction, including without limitation the rights
## to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
## copies of the Software, and to permit persons to whom the Software is
## furnished to do so, subject to the following conditions:
##
## The above copyright notice and this permission notice shall be included in
## all copies or substantial portions of the Software.
##
## THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
## IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
## FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
## AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
## LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
## OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
## SOFTWARE.

# shellcheck disable=2155

## Attempt to ping the default route to check whether the machine is connected
## to the internet
##
test_connection()
{
  local ip="$(ip r | grep default | awk 'NR==1 {print $3}')"

  if ping -q -w 1 -c 1 "${ip}" 1>/dev/null 2>&1; then
    return 0
  else
    return 1
  fi
}

## Check the current network connection and attempt to connect to the internet
## if not already done
##
check_connection()
{
  local wired_dev;
  local wireless_dev;
  local connection_types;

  wired_dev=$(ip link                  \
                | grep "ens\|eno\|enp" \
                | awk '{print $2}'     \
                | sed 's/://'          \
                | sed '1!d')
  wireless_dev=$(ip link              \
                   | grep "wlp\|wlo"  \
                   | awk '{print $2}' \
                   | sed 's/://'      \
                   | sed '1!d')
  connection_types=("Wired Automatic" "Wired Manual" "Wireless")

  if test_connection; then
    return 0
  fi

  print_title "Network Setup"

  select _ in "${connection_types[@]}"; do
    case "$REPLY" in
      1)
        systemctl start "dhcpcd@${wired_dev}.service"
        ;;
      2)
        systemctl stop "dhcpcd@${wired_dev}.service"

        read -rp "IP Address: " ipaddr
        read -rp "Submask: " submask
        read -rp "Gateway: " gateway

        ip link set "${wired_dev}" up
        ip addr add "${ipaddr}/${submask}" dev "${wired_dev}"
        ip route add default via "${gateway}"
        ;;
      3)
        ip link set "${wireless_dev}" up
        wifi-menu "${wireless_dev}"
        ;;
    esac

    if ! test_connection; then
      print_warning "Can't establish connection. Exiting"
      exit 1
    fi
  done
}
