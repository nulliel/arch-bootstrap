#!/usr/bin/env bash

declare PARTITION_DEVICE=""
declare PARTITION_MOUNT=""

################################################################################
## Device Unmounting
################################################################################

##
# Unmounts all currently mounted devices
##
umount_partitions()
{
    local partitions

    mapfile -t partitions < <(
        lsblk -nro MOUNTPOINT | sed '/^$/d' | sed '/SWAP/d' | sort -r
    )

    # Disable swap in case it is mapped to a mounted partition
    swapoff -a

    for i in "${partitions[@]}"; do
        umount "${i}" || :
    done
}

################################################################################
## Device Selection
################################################################################

##
# Displays the currently loaded and compatible block-decides
# that will be used for disk setup
##
show_devices()
{
    local device_arr
    local device_str

    device_arr=(
        $(grep -P "sd|hd|nvme|blkext" "/proc/devices" | awk '{ print $1 }')
    )

    device_str="$(printf "%s" "${device_arr[*]}" | tr ' ' ',')"

    print.info "Device List"

    lsblk -npI "${device_str}"        \
        | awk '{ print $1,$4,$6,$7 }' \
        | column -t

    printf "\n"
}

##
# Selects the device (disk) to use for partitioning
##
select_device()
{
    local device_list

    mapfile -t device_list < <(lsblk -dp              \
                                   | awk '{print $1}' \
                                   | grep -P "sd|hd|vd|nvme|mmcblk")

    print.title "PARTITION - Select Device"

    show_devices

    selection.create                    \
        "PARTITION_DEVICE"              \
        "Select a Device to Partition"  \
        "${device_list[@]}"
}



################################################################################
## Formatting & Mounting
################################################################################
partition_disk()
{
    umount_partitions

    select_device

    exit 1


}