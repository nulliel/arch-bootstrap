#!/usr/bin/env bash

declare -x BOOTLOADER=""

configure_bootloader()
{
    pacstrap "${MOUNTPOINT}" refind-efi os-prober git
    arch_chroot "refind-install"

    arch_chroot "mkdir /boot/themes; cd /boot/themes; git clone https://github.com/EvanPurkhiser/rEFInd-minimal.git"
    echo "include themes/rEFInd-minimal/theme.conf" >>/mnt/boot/refind_linux.conf

    $EDITOR ${MOUNTPOINT}/boot/refind_linux.conf
}

##
# https://wiki.archlinux.org/index.php/Category:Boot_loaders
##
select_bootloader()
{
    local -a bootloader_list=()

    print_title "BOOTLOADER - Select Bootloader"
    print_info "In order to boot Arch Linux, a Linux-capable boot loader must be installed to the Master Boot Record or the GUID Partition Table. It is the first piece of software started by the BIOS or UEFI. It is responsible for loading the kernel with the wanted kernel parameters, and initial RAM disk before initiating the boot process"

    if is_uefi; then
        print_warning "UEFI Mode Detected"
        bootloader_list=("rEFInd" "Syslinux" "GRUB")
    else
        print_warning "BIOS Mode Detected"
        bootloader_list=("Syslinux" "GRUB")
    fi

    printf "\n"

    selection "Select a Bootloader" \
              "${bootloader_list[@]}"

    case "${SELECTION_VALUE}" in
        "rEFInd")
            pacstrap "${PARTITION_MOUNT}" refind-efi os-prober
            ;;
        "Syslinux")
            pacstrap "${PARTITION_MOUNT}" syslinux gptfdisk
            ;;
        "GRUB")
            pacstrap "${PARTITION_MOUNT}" grub os-prober
            ;;
    esac

    pacstrap "${PARTITION_MOUNT}" efibootmgr dosfstools

    if lscpu | grep "Vendor ID.*Intel"; then
        pacstrap "${PARTITION_MOUNT}" intel-ucode
    fi

    BOOTLOADER="${SELECTION_VALUE}"
}

##
##
configure_bootloadera()
{
    print.title "BOOTLOADER - Configure Bootloader"

    case "${BOOTLOADER}" in
        "rEFInd")
            configure_refind
            ;;
        "Syslinux")
            configure_syslinux
            ;;
        "GRUB")
            configure_grub
            ;;
    esac
}

## https://wiki.archlinux.org/index.php/REFInd
##
configure_refind()
{
    print_info "rEFInd is a UEFI boot manager capable of launching EFISTUB kernels. It is a fork of the no-longer maintained rEFIt and fixes many issues with respect to non-Mac UEFI booting. It is designed to be platform-neutral and to simplify booting multiple OSes"
}

configure_syslinux()
{
    print_info "Syslinux is a collection of bootloaders capable of booting from drives, CDs, and over the network via PXE. Some of the supported file systems are FAT, ext2, ext3, ext4, and uncompressed single-device Btrfs"
}

configure_grub()
{
    print.info "GRUB is the next generation of the GRand Unified Bootloader. GRUB is derived from PUPA which was a research project to develop the next generation of what is now GRUB Legacy. GRUB has been rewritten from scratch to clean up everything and provide modularity and portability"

    arch_chroot "grub-install --target=x86_64-efi --efi-directory=/boot --bootloader-id=arch_grub --recheck"
    arch_chroot "grub-mkconfig -o /boot/grub/grub.cfg"
}

install_bootloader()
{
    select_bootloader
    configure_bootloader
}
