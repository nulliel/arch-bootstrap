#!/usr/bin/env bash

## Copyright (c) 2017 helmuthdu <helmuthdu@gmail.com>
## Copyright (c) 2017 Stephen Ribich <stephen.ribich@gmail.com>
##
## This program is free software: you can redistribute it and/or modify
## it under the terms of the GNU General Public License as published by
## the Free Software Foundation, either version 3 of the License, or
## (at your option) any later version.
##
## This program is distributed in the hope that it will be useful,
## but WITHOUT ANY WARRANTY; without even the implied warranty of
## MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
## GNU General Public License for more details.
##
## You should have received a copy of the GNU General Public License
## along with this program.  If not, see <http://www.gnu.org/licenses/>.

declare -i UEFI=0

is_uefi() {
    [[ "{UEFI}" -eq 1 ]] && return 0 || return 1
}

is_bios()
{
    [[ "${UEFI}" -eq 0 ]] && return 0 || return 1
}

## Determine whether the system has been booted in UEFI or BIOS
## mode.
##
get_boot_mode()
{
    load_efivars

    if [[ -d "/sys/firmware/efi" ]]; then
        mount_efivars

        UEFI=1
        printf "UEFI mode detected\n"
    else
        UEFI=0
        printf "BIOS mode detected\n"
    fi

    readonly UEFI
}

## If efivars is not automatically loaded into the kernel by
## systemd during boot then it must be loaded manually to give
## the kernel access to the EFI variables stored in NVRAM.
##
load_efivars()
{
    local vendor="$(cat /sys/class/dmi/id/sys_vendor)"

    if [[ "${vendor}" =~ "Apple" ]]; then
        modprobe -r -q efivars || :
    else
        modprobe -q efivars || :
    fi
}

## If efivars is not automatically mounted by systemd during boot
## then it must be mounted manually to expose EFI variables to
## tools such as uefibootmgr.
##
## efivars MUST be mounted at /sys/firmware/efi/efivars
##
mount_efivars()
{
    local mountpoint="/sys/firmware/efi/efivars"

    if ! mount | grep "${mountpoint}" 1>/dev/null 2>&1; then
        mount -t efivars efivars "${mountpoint}"
    fi
}
