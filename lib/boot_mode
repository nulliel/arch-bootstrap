#!/usr/bin/env bash
## Copyright (c) 2017 helmuthdu <helmuthdu@gmail.com>
## Copyright (c) 2017 Stephen Ribich <stephen.ribich@gmail.com>
##
## This program is free software: you can redistribute it and/or modify
## it under the terms of the GNU General Public License as published by
## the Free Software Foundation, either version 3 of the License, or
## (at your option) any later version.
##
## This program is distributed in the hope that it will be useful,
## but WITHOUT ANY WARRANTY; without even the implied warranty of
## MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
## GNU General Public License for more details.
##
## You should have received a copy of the GNU General Public License
## along with this program.  If not, see <http://www.gnu.org/licenses/>.

UEFI=0

is_uefi()
{
    [[ "${UEFI}" -eq 1 ]] && return 0 || return 1
}

is_bios()
{
    [[ "${UEFI}" -eq 0 ]] && return 0 || return 1
}

get_boot_mode()
{
    local vendor

    vendor="$(cat /sys/class/dmi/id/sys_vendor)"

    if [[ "${vendor}" == "Apple Inc." \
       || "${vendor}" == "Apple Computer, Inc." ]]; then
        modprobe -r -q efivars || true
    else
        modprobe -q efivarfs
    fi

    if [[ -d "/sys/firmware/efi" ]]; then
        if ! mount | grep /sys/firmware/efi/efivars 1>/dev/null 2>&1; then
            mount -t efivarfs efivarfs /sys/firmware/efi/efivars
        fi

        UEFI=1
        printf "UEFI Mode detected\n"
    else
        UEFI=0
        printf "BIOS Mode detected\n"
    fi
}
