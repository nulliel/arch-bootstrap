#!/usr/bin/env bash
## Copyright (c) 2017 Stephen Ribich
##
## Permission is hereby granted, free of charge, to any person obtaining a copy
## of this software and associated documentation files (the "Software"), to deal
## in the Software without restriction, including without limitation the rights
## to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
## copies of the Software, and to permit persons to whom the Software is
## furnished to do so, subject to the following conditions:
##
## The above copyright notice and this permission notice shall be included in
## all copies or substantial portions of the Software.
##
## THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
## IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
## FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
## AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
## LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
## OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
## SOFTWARE.

## Ping the default route to check if the machine is connected to the internet
##
test_connection()
{
    local ip

    ip=$(ip route             \
             | grep 'default' \
             | awk 'NR==1 { print $3 }')

    if ! ping -q -w 1 -c 1 "${ip}" 1>/dev/null 2>&1; then
        return 1
    fi

    return 0
}

## Attempt to connect to the internet if not already done
##
check_connection()
{
    local connection_types=("Wired Automatic" "Wired Manual" "Wireless")

    local wired_dev
    local wireless_dev

    wired_dev=$(ip link                        \
                    | grep '^[0-9].*en.*:'     \
                    | awk 'NR==1 { print $2 }' \
                    | sed 's/://')
    wireless_dev=$(ip link                        \
                       | grep '^[0-9].*wl.*:'     \
                       | awk 'NR==1 { print $2 }' \
                       | sed 's/://')

    if ! test_connection; then
        return 0
    fi

    print_title "Network Setup"

    selection "How would you like to configure the network?" \
              "${connection_types[@]}"

    case "${SELECTION_VALUE}" in
        "Wired Automatic")
            systemctl start "dhcpcd@${wired_dev}.service"
            ;;
        "Wired Manual")
            local ipaddr
            local submask
            local gateway

            systemctl stop "dhcpcd@${wired_dev}.service"

            read -rp "IP Address: " ipaddr
            read -rp "Submask: " submask
            read -rp "Gateway: " gateway

            ip link set "${wired_dev}" up
            ip addr add "${ipaddr}/${submask}" dev "${wired_dev}"
            ip route add default via "${gateway}"
            ;;
        "Wireless")
            ip link set "${wireless_dev}" up
            wifi-menu "${wireless_dev}"
            ;;
    esac

    if ! test_connection; then
        print_warning "Can't establish connection. Exiting"
        exit 1
    fi
}
