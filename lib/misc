## Copyright (c) 2017 Stephen Ribich <stephen.ribich@gmail.com>
##
## This program is free software: you can redistribute it and/or modify
## it under the terms of the GNU General Public License as published by
## the Free Software Foundation, either version 3 of the License, or
## (at your option) any later version.
##
## This program is distributed in the hope that it will be useful,
## but WITHOUT ANY WARRANTY; without even the implied warranty of
## MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
## GNU General Public License for more details.
##
## You should have received a copy of the GNU General Public License
## along with this program.  If not, see <http://www.gnu.org/licenses/>.

## Set the number of columns availaible. Select statements will format according
## to the number of columns set, and this variable is not always set
##
set_columns()
{
  COLUMNS="$(tput cols)"
}

set_prompt()
{
    PS3="${SELECTION_PROMPT}"
}

##
##
get_input()
{
    read -p "$1 [y/N]: " OPTION

    if [[ -z "${OPTION}" ]]; then
        OPTION="n"
    fi

    OPTION=$(printf "%s" "${OPTION}" | tr '[:upper:]' '[:lower:]')
}

confirm () {
  local confirmString="[y/N]"

  if [[ "${#}" -eq 1 ]]; then
    confirmString="$1 ${confirmString}"
  fi

  _printHeader

  read -rsp "${confirmString}" -n1
  clearLine

  return "$(confirmed)"
}

confirmed () {
  local ret=1

  set +o nounset

  if [[ "$REPLY" =~ ^[yY]$ ]]; then
    unset REPLY
    ret=0
  fi

  set -o nounset
  return "${ret}"
}




## Check whether an array ($1) contains an element ($2)
##
contains_element()
{
  local array="$1[@]"
  local seeking="${2}"
  local found=1

  for element in "${!array}"; do
    if [[ "${element}" == "${seeking}" ]]; then
      found=0
      break
    fi
  done

  return "${found}"
}
