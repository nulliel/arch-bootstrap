## Copyright (c) 2017 Stephen Ribich
##
## Permission is hereby granted, free of charge, to any person obtaining a copy
## of this software and associated documentation files (the "Software"), to deal
## in the Software without restriction, including without limitation the rights
## to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
## copies of the Software, and to permit persons to whom the Software is
## furnished to do so, subject to the following conditions:
##
## The above copyright notice and this permission notice shall be included in
## all copies or substantial portions of the Software.
##
## THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
## IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
## FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
## AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
## LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
## OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
## SOFTWARE.

## Set the number of columns availaible. Select statements will format according
## to the number of columns set, and this variable is not always set
##
set_columns()
{
  COLUMNS="$(tput cols)"
}

set_prompt()
{
    PS3="${SELECTION_PROMPT}"
}

##
##
get_input()
{
    read -p "$1 [y/N]: " OPTION

    if [[ -z "${OPTION}" ]]; then
        OPTION="n"
    fi

    OPTION=$(printf "%s" "${OPTION}" | tr '[:upper:]' '[:lower:]')
}

confirm () {
  local confirmString="[y/N]"

  if [[ "${#}" -eq 1 ]]; then
    confirmString="$1 ${confirmString}"
  fi

  _printHeader

  read -rsp "${confirmString}" -n1
  clearLine

  return "$(confirmed)"
}

confirmed () {
  local ret=1

  set +o nounset

  if [[ "$REPLY" =~ ^[yY]$ ]]; then
    unset REPLY
    ret=0
  fi

  set -o nounset
  return "${ret}"
}




## Check whether an array ($1) contains an element ($2)
##
contains_element()
{
  local array="$1[@]"
  local seeking="${2}"
  local found=1

  for element in "${!array}"; do
    if [[ "${element}" == "${seeking}" ]]; then
      found=0
      break
    fi
  done

  return "${found}"
}
